from collections import deque


class FirFilter:
    def __init__(self):
        self.faktors = [
            0.000000000000000000, -0.000004290714210143, -0.000020888731893242,
            -0.000051440654357164, -0.000090995325413473, -0.000127130722306977,
            -0.000140395334178458, -0.000106432350879763, 0.000000000000000000,
            0.000199195829954836, 0.000499364846133507, 0.000889189975803748,
            0.001331531938147624, 0.001760024976884253, 0.002080314002801691,
            0.002177315441849923, 0.001929117715123805, 0.001227031433307994,
            -0.000000000000000001, -0.001759693950453239, -0.003973485958789575,
            -0.006460877776993105, -0.008935353906798010, -0.011015097732267720,
            -0.012249949067956163, -0.012163713496616321, -0.010308385942596901,
            -0.006324491951557331, 0.000000000000000003, 0.008680522962367827,
            0.019504421733440476, 0.032023369276008892, 0.045573165697081405,
            0.059320883206011740, 0.072335551239104595, 0.083675114498538275,
            0.092479787934004479, 0.098060611222618249, 0.099972219376168098,
            0.098060611222618249, 0.092479787934004479, 0.083675114498538289,
            0.072335551239104595, 0.059320883206011740, 0.045573165697081419,
            0.032023369276008892, 0.019504421733440486, 0.008680522962367827,
            0.000000000000000003, -0.006324491951557334, -0.010308385942596901,
            -0.012163713496616328, -0.012249949067956156, -0.011015097732267724,
            -0.008935353906798013, -0.006460877776993104, -0.003973485958789578,
            -0.001759693950453240, -0.000000000000000001, 0.001227031433307994,
            0.001929117715123806, 0.002177315441849924, 0.002080314002801694,
            0.001760024976884251, 0.001331531938147625, 0.000889189975803749,
            0.000499364846133507, 0.000199195829954836, 0.000000000000000000,
            -0.000106432350879763, -0.000140395334178458, -0.000127130722306977,
            -0.000090995325413472, -0.000051440654357164, -0.000020888731893241,
            -0.000004290714210142, 0.000000000000000000,
            ]

#       -0.001361475168739696, -0.001525373152000757, -0.001809351502056104,
#       -0.002113220854661051, -0.002247090107997099, -0.001946211275993479,
#       -0.000900855445517912, 0.001202025560335630, 0.004630619747230107,
#       0.009560161940214942, 0.016031954005815207, 0.023925936129364275,
#       0.032951695949470998, 0.042660482514139661, 0.052478014793031713,
#       0.061755025834728916, 0.069829968617609706, 0.076096493077842345,
#       0.080067456378126123, 0.081427485918113010, 0.080067456378126137,
#       0.076096493077842345, 0.069829968617609720, 0.061755025834728923,
#       0.052478014793031713, 0.042660482514139661, 0.032951695949470991,
#       0.023925936129364278, 0.016031954005815210, 0.009560161940214942,
#       0.004630619747230109, 0.001202025560335632, -0.000900855445517912,
#       -0.001946211275993479, -0.002247090107997097, -0.002113220854661053,
#       -0.001809351502056104, -0.001525373152000756, -0.001361475168739696,
#       ]
        self.inputs = deque(maxlen=len(self.faktors))

    def give_filtered(self, value):
        self.inputs.appendleft(value)
        output = 0
        for count, input in enumerate(self.inputs):
            output += input * self.faktors[count]
        return output

    def reset(self):
        self.inputs = deque(maxlen=len(self.faktors))
